{"version":3,"sources":["Service.jsx","logo.svg","Pacientes.jsx","Odontologos.jsx","Clinica.jsx","App.js","reportWebVitals.js","index.js"],"names":["url","Service","parse","text","JSON","err","Swal","fire","get","endpoint","a","fetch","resp","console","error","post","data","settings","method","headers","body","stringify","put","delete","Pacientes","service","useState","setData","modalEditar","setModalEditar","modalEliminar","setModalEliminar","modalInsertar","setModalInsertar","modalBuscarPorId","setModalBuscarPorId","modalVerDomicilio","setModalVerDomicilio","fetchData","datosAPI","useEffect","id","nombre","apellido","dni","fechaIngreso","domicilio","pacienteSeleccionado","setPacienteSeleccionado","seleccionarPaciente","elemento","accion","handleChange","e","target","name","value","prevState","editar","eliminar","buscar","datosPacientes","altaPaciente","calle","numero","localidad","provincia","pacienteNuevo","className","onClick","map","paciente","index","Modal","isOpen","ModalHeader","ModalBody","type","onChange","ModalFooter","readOnly","Odontologos","matricula","odontologoSeleccionado","setOdontologoSeleccionado","seleccionarOdontologo","datosOdontologo","altaOdontologo","odontologo","App","to","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd81dedc.chunk.js","sourcesContent":["import Swal from 'sweetalert2';\r\n\r\nconst url = \"http://localhost:8080\";\r\n\r\nexport default class Service {\r\n\r\n    parse = (text) => {\r\n        try{\r\n            const json = JSON.parse(text)\r\n            return json\r\n          } catch(err) {\r\n              Swal.fire(text)\r\n            return text;\r\n          }      \r\n    }\r\n\r\n\r\n    get = async (endpoint) => {\r\n        try {\r\n            const resp = await fetch(url+endpoint);\r\n            const text = await resp.text();\r\n            return this.parse(text);\r\n        }\r\n        catch(error){\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    post = async (data, endpoint) => {\r\n        const settings = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }\r\n        try {\r\n            const resp = await fetch(url+endpoint, settings);\r\n            const text = await resp.text();\r\n            return this.parse(text);\r\n        }\r\n        catch(error){\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    put = async (data, endpoint) => {\r\n        const settings = {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }\r\n        try {\r\n            const resp = await fetch(url+endpoint, settings);\r\n            const text = await resp.text();\r\n            return this.parse(text);\r\n        }\r\n        catch(error){\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    delete = async (endpoint) => {\r\n        const settings = {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n            \r\n        }\r\n        try {\r\n            const resp = await fetch(url+endpoint, settings);\r\n            const text = await resp.text();\r\n            return this.parse(text);\r\n        }\r\n        catch(error){\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Service from './Service';\r\nimport Swal from 'sweetalert2';\r\n\r\nfunction Pacientes() {\r\n\r\n  const service = new Service();\r\n\r\n  const [data, setData] = useState([]);\r\n  const [modalEditar, setModalEditar] = useState(false);\r\n  const [modalEliminar, setModalEliminar] = useState(false);\r\n  const [modalInsertar, setModalInsertar] = useState(false);\r\n  const [modalBuscarPorId, setModalBuscarPorId] = useState(false);\r\n  const [modalVerDomicilio, setModalVerDomicilio] = useState(false);\r\n\r\n  async function fetchData() {\r\n    const datosAPI = await service.get(\"/pacientes\");\r\n\r\n    setData(datosAPI);\r\n  }\r\n  useEffect(() => {\r\n\r\n    fetchData();\r\n  }, [])\r\n\r\n  const [pacienteSeleccionado, setPacienteSeleccionado] = useState({\r\n    id: '',\r\n    nombre: '',\r\n    apellido: '',\r\n    dni: '',\r\n    fechaIngreso: '',\r\n    domicilio: {}\r\n\r\n\r\n  });\r\n\r\n  const seleccionarPaciente = (elemento, accion) => {\r\n    setPacienteSeleccionado(elemento);\r\n    switch (accion) {\r\n      case \"Editar\": setModalEditar(true)\r\n        break;\r\n      case \"Eliminar\": setModalEliminar(true)\r\n        break;\r\n      case \"Ver Domicilio\": setModalVerDomicilio(true)\r\n        break;\r\n\r\n      default: break;\r\n\r\n    }\r\n\r\n  }\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setPacienteSeleccionado((prevState) => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  }\r\n\r\n  const editar = async () => {\r\n    const datosPacientes = await service.put(pacienteSeleccionado, \"/pacientes\")\r\n    setModalEditar(false);\r\n    fetchData()\r\n  }\r\n\r\n  const eliminar = async () => {\r\n    const datosPacientes = await service.delete(\"/pacientes\" + \"/\" + pacienteSeleccionado.id)\r\n    setModalEliminar(false);\r\n    fetchData()\r\n\r\n  }\r\n\r\n  const buscar = async () => {\r\n    const datosPacientes = await service.get(\"/pacientes\" + \"/\" + pacienteSeleccionado.id)\r\n    if (typeof datosPacientes == \"object\") {\r\n      setModalBuscarPorId(false);\r\n      setData([datosPacientes])\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  const abrirModalBuscarPorId = () => {\r\n    setPacienteSeleccionado(null);\r\n    setModalBuscarPorId(true);\r\n\r\n  }\r\n\r\n  const abrirModalAltaPaciente = () => {\r\n    setPacienteSeleccionado(null);\r\n    setModalInsertar(true);\r\n\r\n  }\r\n\r\n\r\n  const altaPaciente = async () => {\r\n    const { nombre, apellido, dni, fechaIngreso, calle, numero, localidad, provincia } = pacienteSeleccionado;\r\n    const pacienteNuevo = { nombre, apellido, dni, fechaIngreso, domicilio: { calle, numero, localidad, provincia } };\r\n    const datosPacientes = await service.post(pacienteNuevo, \"/pacientes\")\r\n    setModalInsertar(false);\r\n    Swal.fire(\"Paciente agregado exitosamente\")\r\n    fetchData()\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"App\">\r\n\r\n      <h2> PACIENTES </h2>\r\n      <br />\r\n      <button className=\"btn btn-success\" onClick={() => abrirModalAltaPaciente()}>Insertar</button>\r\n      {\"               \"}\r\n      <button className=\"btn btn-success\" onClick={() => abrirModalBuscarPorId()}>Buscar un paciente</button>\r\n      {\"               \"}\r\n      <button className=\"btn btn-success\" onClick={() => fetchData()}> Buscar todos los pacientes </button>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Nombre</th>\r\n            <th>Apellido</th>\r\n            <th>DNI</th>\r\n            <th>FechaIngreso</th>\r\n            <th>Domicilio</th>\r\n\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((paciente, index) => (\r\n            <tr key={index}>\r\n              <td>{paciente.id}</td>\r\n              <td>{paciente.nombre}</td>\r\n              <td>{paciente.apellido}</td>\r\n              <td>{paciente.dni}</td>\r\n              <td>{paciente.fechaIngreso}</td>\r\n              <td> <button className=\"btn btn-primary\" onClick={() => seleccionarPaciente(paciente.domicilio, 'Ver Domicilio')}>Ver Domicilio</button> </td>\r\n              <td><button className=\"btn btn-primary\" onClick={() => seleccionarPaciente(paciente, 'Editar')}>Editar</button> {\"   \"}\r\n                <button className=\"btn btn-danger\" onClick={() => seleccionarPaciente(paciente, 'Eliminar')}>Eliminar</button></td>\r\n            </tr>\r\n          ))\r\n          }\r\n        </tbody>\r\n      </table>\r\n\r\n\r\n      <Modal isOpen={modalVerDomicilio}>\r\n        <ModalHeader>\r\n          <div>\r\n            <h3>Ver Domicilio</h3>\r\n          </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"form-group\">\r\n            <label>Calle</label>\r\n            <input\r\n              className=\"form-control\"\r\n\r\n              type=\"text\"\r\n              name=\"Calle\"\r\n              value={pacienteSeleccionado && pacienteSeleccionado.calle}\r\n            />\r\n            <br />\r\n\r\n            <label>Numero</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"Numero\"\r\n              value={pacienteSeleccionado && pacienteSeleccionado.numero}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Localidad</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"Localidad\"\r\n              value={pacienteSeleccionado && pacienteSeleccionado.localidad}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n            <label>Provincia</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"Provincia\"\r\n              value={pacienteSeleccionado && pacienteSeleccionado.provincia}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => setModalVerDomicilio(false)}\r\n          >\r\n            Ok\r\n          </button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n\r\n      <Modal isOpen={modalEditar}>\r\n        <ModalHeader>\r\n          <div>\r\n            <h3>Editar Paciente</h3>\r\n          </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"form-group\">\r\n            <label>ID</label>\r\n            <input\r\n              className=\"form-control\"\r\n              readOnly\r\n              type=\"text\"\r\n              name=\"id\"\r\n              value={pacienteSeleccionado && pacienteSeleccionado.id}\r\n            />\r\n            <br />\r\n\r\n            <label>Nombre</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"nombre\"\r\n              value={pacienteSeleccionado && pacienteSeleccionado.nombre}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n\r\n\r\n            <label>Apellido</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"apellido\"\r\n              value={pacienteSeleccionado && pacienteSeleccionado.apellido}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n            <label>DNI</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"dni\"\r\n              value={pacienteSeleccionado && pacienteSeleccionado.dni}\r\n              onChange={handleChange}\r\n\r\n\r\n            />\r\n            <br />\r\n\r\n            <label>Fecha Ingreso</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"fechaIngreso\"\r\n              value={pacienteSeleccionado && pacienteSeleccionado.fechaIngreso}\r\n              onChange={handleChange}\r\n\r\n\r\n            />\r\n            <br />\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <button className=\"btn btn-primary\" onClick={() => editar()}>\r\n            Actualizar\r\n          </button>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => setModalEditar(false)}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n\r\n      <Modal isOpen={modalEliminar}>\r\n        <ModalBody>\r\n          Estás Seguro que deseas eliminar el paciente {pacienteSeleccionado && pacienteSeleccionado.nombre}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <button className=\"btn btn-danger\" onClick={() => eliminar()}>\r\n            Sí\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            onClick={() => setModalEliminar(false)}\r\n          >\r\n            No\r\n          </button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      <Modal isOpen={modalBuscarPorId}>\r\n        <ModalBody>\r\n          Ingresa el id del paciente buscado\r\n\r\n          <label>ID</label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"id\"\r\n            value={pacienteSeleccionado && pacienteSeleccionado.id}\r\n            onChange={handleChange}\r\n          />\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <button className=\"btn btn-danger\" onClick={() => buscar()}>\r\n            Buscar\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            onClick={() => setModalBuscarPorId(false)}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n\r\n      <Modal isOpen={modalInsertar}>\r\n        <ModalHeader>\r\n          <div>\r\n            <h3>Insertar Paciente</h3>\r\n          </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"form-group\">\r\n\r\n            <label>Nombre</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"nombre\"\r\n              value={pacienteSeleccionado ? pacienteSeleccionado.nombre : ''}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>Apellido</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"apellido\"\r\n              value={pacienteSeleccionado ? pacienteSeleccionado.apellido : ''}\r\n              onChange={handleChange}\r\n            />\r\n            <label>DNI</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"dni\"\r\n              value={pacienteSeleccionado ? pacienteSeleccionado.dni : ''}\r\n              onChange={handleChange}\r\n            />\r\n            <label>fechaIngreso</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"fechaIngreso\"\r\n              value={pacienteSeleccionado ? pacienteSeleccionado.fechaIngreso : ''}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n            <hr />\r\n            <p> Domicilio </p>\r\n\r\n            <label>Calle</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"calle\"\r\n              value={pacienteSeleccionado ? pacienteSeleccionado.calle : ''}\r\n              onChange={handleChange}\r\n            />\r\n            <label>Numero</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"numero\"\r\n              value={pacienteSeleccionado ? pacienteSeleccionado.numero : ''}\r\n              onChange={handleChange}\r\n            />\r\n\r\n            <label>Localidad</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"localidad\"\r\n              value={pacienteSeleccionado ? pacienteSeleccionado.localidad : ''}\r\n              onChange={handleChange}\r\n            />\r\n            <label>Provincia</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"provincia\"\r\n              value={pacienteSeleccionado ? pacienteSeleccionado.provincia : ''}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <button className=\"btn btn-primary\"\r\n            onClick={() => altaPaciente()}>\r\n            Insertar\r\n          </button>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => setModalInsertar(false)}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pacientes;\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Service from './Service';\r\nimport Swal from 'sweetalert2';\r\n\r\nfunction Odontologos() {\r\n\r\n  const service = new Service();\r\n  \r\n  const [data, setData] = useState([]);\r\n  const [modalEditar, setModalEditar] = useState(false);\r\n  const [modalEliminar, setModalEliminar] = useState(false);\r\n  const [modalInsertar, setModalInsertar] = useState(false);\r\n  const [modalBuscarPorId, setModalBuscarPorId] = useState(false);\r\n\r\n\r\n  async function fetchData(){\r\n    const datosAPI = await service.get(\"/odontologos\");\r\n  \r\n    setData(datosAPI);\r\n  }\r\n  useEffect(() => {\r\n   \r\n    fetchData();\r\n    },[])\r\n\r\n  const [odontologoSeleccionado, setOdontologoSeleccionado] = useState({\r\n    id: '',\r\n    nombre: '',\r\n    apellido: '',\r\n    matricula: '',\r\n    \r\n\r\n  });\r\n\r\n  const seleccionarOdontologo = (elemento, accion) => {\r\n    setOdontologoSeleccionado(elemento);\r\n    switch(accion) {\r\n      case \"Editar\": setModalEditar(true)\r\n      break;\r\n      case \"Eliminar\": setModalEliminar(true)\r\n      break;\r\n      default: break;\r\n\r\n    }\r\n    \r\n  }\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setOdontologoSeleccionado((prevState) => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  }\r\n\r\n  const editar = async () => {\r\n    const datosOdontologo = await service.put(odontologoSeleccionado, \"/odontologos\")\r\n    setModalEditar(false);\r\n    fetchData()\r\n   \r\n  }\r\n\r\n  const eliminar = async () => {\r\n    const datosOdontologo = await service.delete(\"/odontologos\" + \"/\" + odontologoSeleccionado.id)\r\n    setModalEliminar(false);\r\n    fetchData()\r\n   \r\n  }\r\n\r\n  const buscar = async () => {\r\n    const datosOdontologo = await service.get(\"/odontologos\" + \"/\" + odontologoSeleccionado.id)\r\n    if(typeof datosOdontologo== \"object\") {\r\n      setModalBuscarPorId(false);\r\n      setData([datosOdontologo])\r\n     \r\n    }\r\n  \r\n    \r\n  }\r\n\r\n  const abrirModalBuscarPorId = () => {\r\n    setOdontologoSeleccionado(null);\r\n    setModalBuscarPorId(true);\r\n  \r\n  }\r\n\r\n  const abrirModalAltaOdontologo = () => {\r\n    setOdontologoSeleccionado(null);\r\n    setModalInsertar(true);\r\n    fetchData()\r\n  }\r\n\r\n  \r\n  const altaOdontologo = async() => {\r\n    const {nombre, apellido, matricula} = odontologoSeleccionado;\r\n   await service.post(odontologoSeleccionado, \"/odontologos\")\r\n    setModalInsertar(false);\r\n       fetchData()\r\n    Swal.fire(\"Odontologo agregado exitosamente\")\r\n  }\r\n\r\n  return (\r\n\r\n      <div className=\"App\">\r\n        \r\n        <h2> ODONTOLOGOS </h2>\r\n        <br />\r\n        <button className=\"btn btn-success\" onClick={() => abrirModalAltaOdontologo()}>Insertar</button>\r\n        {\"               \"}\r\n        <button className=\"btn btn-success\" onClick={() => abrirModalBuscarPorId()}>Buscar un Odontologo</button>\r\n        {\"               \"}\r\n        <button className=\"btn btn-success\" onClick={() => fetchData()}> Buscar todos los odontologos </button>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Nombre</th>\r\n              <th>Apellido</th>\r\n              <th>Matricula</th>\r\n             \r\n            </tr>\r\n          </thead>\r\n          \r\n          <tbody>\r\n            { data.map((odontologo, index) => (\r\n              <tr key= {index}>\r\n                <td>{odontologo.id}</td>\r\n                <td>{odontologo.nombre}</td>\r\n                <td>{odontologo.apellido}</td>\r\n                <td>{odontologo.matricula}</td>\r\n               \r\n                \r\n                <td><button className=\"btn btn-primary\" onClick={() => seleccionarOdontologo(odontologo, 'Editar')}>Editar</button> {\"   \"}\r\n                  <button className=\"btn btn-danger\" onClick={() => seleccionarOdontologo(odontologo, 'Eliminar')}>Eliminar</button></td>\r\n              </tr>\r\n            ))\r\n            }\r\n          </tbody>\r\n        </table>\r\n\r\n\r\n        <Modal isOpen={modalEditar}>\r\n          <ModalHeader>\r\n            <div>\r\n              <h3>Editar Odontologo</h3>\r\n            </div>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"form-group\">\r\n              <label>ID</label>\r\n              <input\r\n                className=\"form-control\"\r\n                readOnly\r\n                type=\"text\"\r\n                name=\"id\"\r\n                value={odontologoSeleccionado && odontologoSeleccionado.id}\r\n              />\r\n              <br />\r\n\r\n              <label>Odontologo</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"nombre\"\r\n                value={odontologoSeleccionado && odontologoSeleccionado.nombre}\r\n                onChange={handleChange}\r\n              />\r\n              <br />\r\n\r\n              <label>Apellido</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"apellido\"\r\n                value={odontologoSeleccionado && odontologoSeleccionado.apellido}\r\n                onChange={handleChange}\r\n              />\r\n              <br />\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <button className=\"btn btn-primary\" onClick={() => editar()}>\r\n              Actualizar\r\n            </button>\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => setModalEditar(false)}\r\n            >\r\n              Cancelar\r\n            </button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n\r\n        <Modal isOpen={modalEliminar}>\r\n          <ModalBody>\r\n            Estás Seguro que deseas eliminar el odontólogo {odontologoSeleccionado && odontologoSeleccionado.nombre}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <button className=\"btn btn-danger\" onClick={() => eliminar()}>\r\n              Sí\r\n            </button>\r\n            <button\r\n              className=\"btn btn-secondary\"\r\n              onClick={() => setModalEliminar(false)}\r\n            >\r\n              No\r\n            </button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n        <Modal isOpen={modalBuscarPorId}>\r\n          <ModalBody>\r\n            Ingresa el id del odontólogo buscado\r\n\r\n            <label>ID</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"id\"\r\n                value={odontologoSeleccionado && odontologoSeleccionado.id}\r\n                onChange={handleChange}\r\n              />\r\n\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <button className=\"btn btn-danger\" onClick={() => buscar()}>\r\n              Buscar\r\n            </button>\r\n            <button\r\n              className=\"btn btn-secondary\"\r\n              onClick={() => setModalBuscarPorId(false)}\r\n            >\r\n              Cancelar\r\n            </button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n\r\n        <Modal isOpen={modalInsertar}>\r\n          <ModalHeader>\r\n            <div>\r\n              <h3>Insertar Odontologo</h3>\r\n            </div>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"form-group\">\r\n             \r\n              <label>Nombre</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"nombre\"\r\n                value={odontologoSeleccionado ? odontologoSeleccionado.nombre : ''}\r\n                onChange={handleChange}\r\n              />\r\n              <br />\r\n\r\n              <label>Apellido</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"apellido\"\r\n                value={odontologoSeleccionado ? odontologoSeleccionado.apellido : ''}\r\n                onChange={handleChange}\r\n              />\r\n              <label>Matricula</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"matricula\"\r\n                value={odontologoSeleccionado ? odontologoSeleccionado.dni : ''}\r\n                onChange={handleChange}\r\n              />\r\n              \r\n              <br />\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <button className=\"btn btn-primary\"\r\n              onClick={() => altaOdontologo()}>\r\n              Insertar\r\n            </button>\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => setModalInsertar(false)}\r\n            >\r\n              Cancelar\r\n            </button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n      );\r\n}\r\n\r\nexport default Odontologos;\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Service from './Service';\r\nimport Swal from 'sweetalert2';\r\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\r\nimport Pacientes from './Pacientes';\r\nimport Odontologos from './Odontologos';\r\n\r\n\r\nexport default function App() {\r\n\r\n    return (\r\n        <>\r\n            <h1> Bienvenidos a la clínica odontológica </h1>\r\n         \r\n            <Link to=\"/paciente\"> Pacientes </Link>\r\n            <Link to=\"/odontologo\"> Odontologos </Link>\r\n        </>\r\n    )\r\n}","import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Service from './Service';\r\nimport Swal from 'sweetalert2';\r\nimport Pacientes from './Pacientes';\r\nimport Odontologos from './Odontologos';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Clinica from './Clinica';\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n\r\n    <BrowserRouter>\r\n    <Switch>\r\n    <Route exact path= \"/\"> <Clinica/> </Route>\r\n    <Route path=\"/paciente\"> <Pacientes /> </Route>\r\n    <Route path=\"/odontologo\"> <Odontologos /> </Route>\r\n    </Switch>\r\n    </BrowserRouter>\r\n  )\r\n\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}