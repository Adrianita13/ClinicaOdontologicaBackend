{"version":3,"sources":["Service.jsx","logo.svg","Pacientes.jsx","Clinica.jsx","App.js","reportWebVitals.js","index.js"],"names":["url","Service","parse","text","JSON","err","Swal","fire","get","endpoint","a","fetch","resp","console","error","post","data","settings","method","headers","body","stringify","put","delete","Pacientes","service","useState","setData","modalEditar","setModalEditar","modalEliminar","setModalEliminar","modalInsertar","setModalInsertar","modalBuscarPorId","setModalBuscarPorId","modalVerDomicilio","setModalVerDomicilio","fetchData","datosAPI","useEffect","id","nombre","apellido","dni","fechaIngreso","domicilio","pacienteSeleccionado","setPacienteSeleccionado","seleccionarPaciente","elemento","accion","handleChange","e","target","name","value","prevState","editar","eliminar","buscar","datosPacientes","altaPaciente","calle","numero","localidad","provincia","pacienteNuevo","className","onClick","map","paciente","index","Modal","isOpen","ModalHeader","ModalBody","type","onChange","ModalFooter","readOnly","App","to","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53bdabaa.chunk.js","sourcesContent":["import Swal from 'sweetalert2';\r\n\r\nconst url = \"http://localhost:8080\";\r\n\r\nexport default class Service {\r\n\r\n    parse = (text) => {\r\n        try{\r\n            const json = JSON.parse(text)\r\n            return json\r\n          } catch(err) {\r\n              Swal.fire(text)\r\n            return text;\r\n          }      \r\n    }\r\n\r\n\r\n    get = async (endpoint) => {\r\n        try {\r\n            const resp = await fetch(url+endpoint);\r\n            const text = await resp.text();\r\n            return this.parse(text);\r\n        }\r\n        catch(error){\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    post = async (data, endpoint) => {\r\n        const settings = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }\r\n        try {\r\n            const resp = await fetch(url+endpoint, settings);\r\n            const text = await resp.text();\r\n            return this.parse(text);\r\n        }\r\n        catch(error){\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    put = async (data, endpoint) => {\r\n        const settings = {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }\r\n        try {\r\n            const resp = await fetch(url+endpoint, settings);\r\n            const text = await resp.text();\r\n            return this.parse(text);\r\n        }\r\n        catch(error){\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    delete = async (endpoint) => {\r\n        const settings = {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n            \r\n        }\r\n        try {\r\n            const resp = await fetch(url+endpoint, settings);\r\n            const text = await resp.text();\r\n            return this.parse(text);\r\n        }\r\n        catch(error){\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Service from './Service';\r\nimport Swal from 'sweetalert2';\r\n\r\nfunction Pacientes() {\r\n\r\n  const service = new Service();\r\n  \r\n  const [data, setData] = useState([]);\r\n  const [modalEditar, setModalEditar] = useState(false);\r\n  const [modalEliminar, setModalEliminar] = useState(false);\r\n  const [modalInsertar, setModalInsertar] = useState(false);\r\n  const [modalBuscarPorId, setModalBuscarPorId] = useState(false);\r\n  const [modalVerDomicilio, setModalVerDomicilio] = useState(false);\r\n\r\n  async function fetchData(){\r\n    const datosAPI = await service.get(\"/pacientes\");\r\n  \r\n    setData(datosAPI);\r\n  }\r\n  useEffect(() => {\r\n   \r\n    fetchData();\r\n    },[])\r\n\r\n  const [pacienteSeleccionado, setPacienteSeleccionado] = useState({\r\n    id: '',\r\n    nombre: '',\r\n    apellido: '',\r\n    dni: '',\r\n    fechaIngreso: '',\r\n    domicilio:{}\r\n    \r\n  \r\n  });\r\n\r\n  const seleccionarPaciente = (elemento, accion) => {\r\n    setPacienteSeleccionado(elemento);\r\n    switch(accion) {\r\n      case \"Editar\": setModalEditar(true)\r\n      break;\r\n      case \"Eliminar\": setModalEliminar(true)\r\n      break;\r\n      case \"Ver Domicilio\": setModalVerDomicilio(true)\r\n      break;\r\n\r\n      default: break;\r\n\r\n    }\r\n    \r\n  }\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setPacienteSeleccionado((prevState) => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  }\r\n\r\n  const editar = async () => {\r\n    const datosPacientes = await service.put(pacienteSeleccionado, \"/pacientes\")\r\n    setModalEditar(false);\r\n   \r\n  }\r\n\r\n  const eliminar = async () => {\r\n    const datosPacientes = await service.delete(\"/pacientes\" + \"/\" + pacienteSeleccionado.id)\r\n    setModalEliminar(false);\r\n    fetchData()\r\n   \r\n  }\r\n\r\n  const buscar = async () => {\r\n    const datosPacientes = await service.get(\"/pacientes\" + \"/\" + pacienteSeleccionado.id)\r\n    if(typeof datosPacientes== \"object\") {\r\n      setModalBuscarPorId(false);\r\n      setData([datosPacientes])\r\n     \r\n    }\r\n  \r\n    \r\n  }\r\n\r\n  const abrirModalBuscarPorId = () => {\r\n    setPacienteSeleccionado(null);\r\n    setModalBuscarPorId(true);\r\n  \r\n  }\r\n\r\n  const abrirModalAltaPaciente = () => {\r\n    setPacienteSeleccionado(null);\r\n    setModalInsertar(true);\r\n    fetchData()\r\n  }\r\n\r\n  \r\n  const altaPaciente = async() => {\r\n    const {nombre, apellido, dni, fechaIngreso, calle, numero, localidad, provincia} = pacienteSeleccionado;\r\n    const pacienteNuevo= {nombre, apellido, dni, fechaIngreso, domicilio : {calle, numero, localidad, provincia}};\r\n   const datosPacientes = await service.post(pacienteNuevo, \"/pacientes\")\r\n    setModalInsertar(false);\r\n    Swal.fire(\"Paciente agregado exitosamente\")\r\n \r\n  }\r\n\r\n\r\n  return (\r\n\r\n      <div className=\"App\">\r\n        \r\n        <h2> PACIENTES </h2>\r\n        <br />\r\n        <button className=\"btn btn-success\" onClick={() => abrirModalAltaPaciente()}>Insertar</button>\r\n        {\"               \"}\r\n        <button className=\"btn btn-success\" onClick={() => abrirModalBuscarPorId()}>Buscar un paciente</button>\r\n        {\"               \"}\r\n        <button className=\"btn btn-success\" onClick={() => fetchData()}> Buscar todos los pacientes </button>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Nombre</th>\r\n              <th>Apellido</th>\r\n              <th>DNI</th>\r\n              <th>FechaIngreso</th>\r\n              <th>Domicilio</th>\r\n\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((paciente, index) => (\r\n              <tr key= {index}>\r\n                <td>{paciente.id}</td>\r\n                <td>{paciente.nombre}</td>\r\n                <td>{paciente.apellido}</td>\r\n                <td>{paciente.dni}</td>\r\n                <td>{paciente.fechaIngreso}</td>\r\n                <td> <button className=\"btn btn-primary\" onClick={() => seleccionarPaciente(paciente.domicilio, 'Ver Domicilio')}>Ver Domicilio</button> </td>\r\n                <td><button className=\"btn btn-primary\" onClick={() => seleccionarPaciente(paciente, 'Editar')}>Editar</button> {\"   \"}\r\n                  <button className=\"btn btn-danger\" onClick={() => seleccionarPaciente(paciente, 'Eliminar')}>Eliminar</button></td>\r\n              </tr>\r\n            ))\r\n            }\r\n          </tbody>\r\n        </table>\r\n\r\n\r\n        <Modal isOpen={modalVerDomicilio}>\r\n          <ModalHeader>\r\n            <div>\r\n              <h3>Ver Domicilio</h3>\r\n            </div>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"form-group\">\r\n              <label>Calle</label>\r\n              <input\r\n                className=\"form-control\"\r\n\r\n                type=\"text\"\r\n                name=\"Calle\"\r\n                value={pacienteSeleccionado && pacienteSeleccionado.calle}\r\n              />\r\n              <br />\r\n\r\n              <label>Numero</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"Numero\"\r\n                value={pacienteSeleccionado && pacienteSeleccionado.numero}\r\n                onChange={handleChange}\r\n              />\r\n              <br />\r\n\r\n              <label>Localidad</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"Localidad\"\r\n                value={pacienteSeleccionado && pacienteSeleccionado.localidad}\r\n                onChange={handleChange}\r\n              />\r\n              <br />\r\n              <label>Provincia</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"Provincia\"\r\n                value={pacienteSeleccionado && pacienteSeleccionado.provincia}\r\n                onChange={handleChange}\r\n              />\r\n              <br />\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => setModalVerDomicilio(false)}\r\n            >\r\n              Ok\r\n            </button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n\r\n        <Modal isOpen={modalEditar}>\r\n          <ModalHeader>\r\n            <div>\r\n              <h3>Editar Paciente</h3>\r\n            </div>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"form-group\">\r\n              <label>ID</label>\r\n              <input\r\n                className=\"form-control\"\r\n                readOnly\r\n                type=\"text\"\r\n                name=\"id\"\r\n                value={pacienteSeleccionado && pacienteSeleccionado.id}\r\n              />\r\n              <br />\r\n\r\n              <label>Paciente</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"nombre\"\r\n                value={pacienteSeleccionado && pacienteSeleccionado.nombre}\r\n                onChange={handleChange}\r\n              />\r\n              <br />\r\n\r\n              <label>Apellido</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"apellido\"\r\n                value={pacienteSeleccionado && pacienteSeleccionado.apellido}\r\n                onChange={handleChange}\r\n              />\r\n              <br />\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <button className=\"btn btn-primary\" onClick={() => editar()}>\r\n              Actualizar\r\n            </button>\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => setModalEditar(false)}\r\n            >\r\n              Cancelar\r\n            </button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n\r\n        <Modal isOpen={modalEliminar}>\r\n          <ModalBody>\r\n            Estás Seguro que deseas eliminar el paciente {pacienteSeleccionado && pacienteSeleccionado.nombre}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <button className=\"btn btn-danger\" onClick={() => eliminar()}>\r\n              Sí\r\n            </button>\r\n            <button\r\n              className=\"btn btn-secondary\"\r\n              onClick={() => setModalEliminar(false)}\r\n            >\r\n              No\r\n            </button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n        <Modal isOpen={modalBuscarPorId}>\r\n          <ModalBody>\r\n            Ingresa el id del paciente buscado\r\n\r\n            <label>ID</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"id\"\r\n                value={pacienteSeleccionado && pacienteSeleccionado.id}\r\n                onChange={handleChange}\r\n              />\r\n\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <button className=\"btn btn-danger\" onClick={() => buscar()}>\r\n              Buscar\r\n            </button>\r\n            <button\r\n              className=\"btn btn-secondary\"\r\n              onClick={() => setModalBuscarPorId(false)}\r\n            >\r\n              Cancelar\r\n            </button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n\r\n        <Modal isOpen={modalInsertar}>\r\n          <ModalHeader>\r\n            <div>\r\n              <h3>Insertar Paciente</h3>\r\n            </div>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"form-group\">\r\n             \r\n              <label>Nombre</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"nombre\"\r\n                value={pacienteSeleccionado ? pacienteSeleccionado.nombre : ''}\r\n                onChange={handleChange}\r\n              />\r\n              <br />\r\n\r\n              <label>Apellido</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"apellido\"\r\n                value={pacienteSeleccionado ? pacienteSeleccionado.apellido : ''}\r\n                onChange={handleChange}\r\n              />\r\n              <label>DNI</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"dni\"\r\n                value={pacienteSeleccionado ? pacienteSeleccionado.dni : ''}\r\n                onChange={handleChange}\r\n              />\r\n              <label>fechaIngreso</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"fechaIngreso\"\r\n                value={pacienteSeleccionado ? pacienteSeleccionado.fechaIngreso : ''}\r\n                onChange={handleChange}\r\n              />\r\n              <br/>\r\n              <hr/>\r\n              <p> Domicilio </p>\r\n              \r\n              <label>Calle</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"calle\"\r\n                value={pacienteSeleccionado ? pacienteSeleccionado.calle : ''}\r\n                onChange={handleChange}\r\n              />\r\n               <label>Numero</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"numero\"\r\n                value={pacienteSeleccionado ? pacienteSeleccionado.numero : ''}\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <label>Localidad</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"localidad\"\r\n                value={pacienteSeleccionado ? pacienteSeleccionado.localidad : ''}\r\n                onChange={handleChange}\r\n              />    \r\n                <label>Provincia</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"provincia\"\r\n                value={pacienteSeleccionado ? pacienteSeleccionado.provincia : ''}\r\n                onChange={handleChange}\r\n              />    \r\n              <br />\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <button className=\"btn btn-primary\"\r\n              onClick={() => altaPaciente()}>\r\n              Insertar\r\n            </button>\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => setModalInsertar(false)}\r\n            >\r\n              Cancelar\r\n            </button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n      );\r\n}\r\n\r\nexport default Pacientes;\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Service from './Service';\r\nimport Swal from 'sweetalert2';\r\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function App() {\r\n\r\n    return (\r\n        <>\r\n            <h1> Bienvenidos a la clínica odontológica </h1>\r\n\r\n            <Link to=\"/paciente\"> Pacientes </Link>\r\n            <Link to=\"/odontologo\"> Odontologos </Link>\r\n        </>\r\n    )\r\n}","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\nimport React, { useState, useEffect } from 'react';\nimport Service from './Service';\nimport Swal from 'sweetalert2';\nimport Pacientes from './Pacientes';\nimport Odontologos from './Odontologos';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Clinica from './Clinica';\n\nexport default function App() {\n\n  return (\n\n    <BrowserRouter>\n    <Switch>\n    <Route exact path= \"/\"> <Clinica/> </Route>\n    <Route path= \"/paciente\"> <Pacientes/> </Route>\n    <Route path= \"/odontologo\"> <Odontologos/> </Route>\n    </Switch>\n    </BrowserRouter>\n  )\n\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}